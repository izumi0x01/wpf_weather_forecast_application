<Window x:Class="wpf_weather_forecast_application.view.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpf_weather_forecast_application.view"
        mc:Ignorable="d"
        Title="MainView"  MinHeight="700">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <!--column = autoにはしてはいけない-->
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <!--<ComboBox x:Name="MyBox"
        ItemsSource="{Binding MyList}"
        SelectedValue="{Binding MyItem, Mode=OneWayToSource}" >
                <ComboBox.ItemContainerStyle>
                    <Style>
                        <EventSetter Event="ComboBoxItem.PreviewMouseDown"
                    Handler="cmbItem_PreviewMouseDown"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>-->
            <!--<Rectangle >
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>-->
            <Button Command="{Binding GetDataCommand}" Content="getdata">

            </Button>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="0" Background="WhiteSmoke">
            <ListBox HorizontalAlignment="Left" ItemsSource="{Binding Weekly_Weather}" Width="Auto" MaxWidth="600"  Margin="50,50,400,50">

                <!--外枠のデザインの設定-->
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border  Background="White" BorderBrush="Black" BorderThickness="1" >
                            <ItemsPresenter Width="600"/>
                            <!--中身の要素を表示するには，itempresenterが必要．
                            itempresenterは要素を表示するために，必要．-->
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!--要素の並べ方．つまり，垂直方向stackpanelか横方向wrappanelか．-->
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <!--データバインディングの設定，DataTemplateがデータバインディングには必要-->
                    <DataTemplate>
                        <Border BorderBrush="#FFFFC1D5" BorderThickness="1" >
                            <!--<behaviours:Interaction.Triggers>
                                    <behaviours:EventTrigger EventName="MouseDoubleClick">
                                        -->
                            <!-- RelativeSourceで何処まで遡るかで任意のVMのメソッドが呼べる。
                                     ListBoxItemまでならPersonオブジェクト。ListBoxまで遡るとMainWindowViewModel。
                                   　あと、コマンド作るのがだるかったのでCallMethodActionでちょっと手抜き -->
                            <!--
                                        <behaviours:CallMethodAction 
                                    TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=DataContext}" 
                                    MethodName="Execute"/>
                                    </behaviours:EventTrigger>
                                </behaviours:Interaction.Triggers>-->
                            <StackPanel Width="600">
                                <StackPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    </LinearGradientBrush>
                                </StackPanel.Background>
                                <Grid  ShowGridLines="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition  Width="2*"/>
                                        <ColumnDefinition  Width="3*"/>
                                        <ColumnDefinition  Width="3*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0">
                                        <Rectangle Fill="#FFD0D0D0" Width="50" Height="50" Margin="10,10,10,10">

                                        </Rectangle>
                                    </Border>
                                    <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="1" Background="#FFD6E5F5" IsTabStop="False"/>
                                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch">
                                        <TextBlock  Text="観測場所" />
                                        <TextBlock  Text="{Binding area}" />
                                    </StackPanel>
                                    <GridSplitter Grid.Column="1" HorizontalAlignment="Right" Width="1" Background="#FFD6E5F5" IsTabStop="False"/>
                                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="最高気温"  />
                                            <TextBlock Text="{Binding MaxTemperature}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="/"></TextBlock>
                                            <TextBlock Text="/"></TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="最低気温" />
                                            <TextBlock Text="{Binding MinTemperature}" />
                                        </StackPanel>
                                    </StackPanel>
                                    <GridSplitter Grid.Column="2" HorizontalAlignment="Right" Width="1" Background="#FFD6E5F5" IsTabStop="False"/>
                                    <StackPanel Grid.Column="3" Orientation="Vertical">
                                        <TextBlock  Text="降水確率" />
                                        <TextBlock  Text="{Binding Rainy_percent}" />
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">

                    </Style>
                </ListBox.ItemContainerStyle>

            </ListBox>
        </Grid>

        <!--参考サイト：https://ufcpp.net/study/dotnet/wpf_template.html-->
        <!--必要な要素：日付，気温，湿度，状態，最高最低気温-->

    </Grid>
</Window>
